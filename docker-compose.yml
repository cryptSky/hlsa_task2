version: '3'

services:

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    env_file:
      - 'env.influxdb'
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/influxdb/data
      - /srv/docker/influxdb/data:/var/lib/influxdb:rw

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    links:
      - influxdb
    user: "0"
    env_file:
      - 'env.telegraph'
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - 'env.grafana'
    user: "0"
    links:
      - influxdb
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/grafana/data; chown 472:472 /srv/docker/grafana/data
      - /srv/docker/grafana/data:/var/lib/grafana  

  server:
    build: ./server
    container_name: 'server'
    expose:
      - "8000"
    ports:
      - "8000:8000"
    volumes:
      - ./server:/server
    env_file: 
      - .env
    restart: always

  frontend:
    stdin_open: true
    image: node:13.2.0
    container_name: 'client'
    command: ["/src/client/dev-nuxt.sh"]
    volumes:
      - .:/src
      - node_modules:/src/client/node_modules
    ports:
      - 80:80
    depends_on:
      - server
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true

  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: flask_db
      MONGODB_DATA_DIR: /var/lib/mongodb-data
      MONDODB_LOG_DIR: /dev/null
    restart: always
    volumes:
     - mongodb-data:/var/lib/mongodb-data
    ports:
      - "27017:27017"

volumes:
  app:
  mongodb-data:
  node_modules:

